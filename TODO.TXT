TODO
-Get test rom working https://github.com/Timendus/chip8-test-suite
    00E0 - Clear the screen
    6xnn - Load normal register with immediate value
    Annn - Load index register with immediate value
    Dxyn - Draw sprite to screen (only aligned)
    1nnn - Jump opcode
- set up SDL
screen display 

What I learned
How a cpu works - fetch code from memory, decode it, execute it
How bitwise operations working on binary and hexadecimal numbers
How to setup SDL for graphics display

References
https://github.com/trapexit/chip-8_documentation
https://github.com/mattmikolay/chip-8/wiki/CHIP%E2%80%908-Instruction-Set
http://www.emulator101.com/chip-8-emulator.html
https://multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/
https://tobiasvl.github.io/blog/write-a-chip-8-emulator/


run in cmd line 

Run make
MinGW32-make
./chip8_emulator "1-chip8-logo.ch8" <debug>


Bit masking example
6XNN LD VX, NN - Store number NN in register VX
0xB1
0b10110001
0xF
0b1111

0xB1 & 0xF = 0b00000001
= 0x1

Bitwise OR
A250
code[0] << 8 | code[1]
0xa2 << 8 | 0x50
0b10100010 00000000 | 0b01010000
0b1010001001010000 = 0xA250
